/usr/local/lib/python3.6/dist-packages/requests/__init__.py:104: RequestsDependencyWarning: urllib3 (1.26.12) or chardet (2.3.0)/charset_normalizer (2.0.12) doesn't match a supported version!
  RequestsDependencyWarning)
INFO:root:=============================================
INFO:root:message_save_path                       : /usr/local/check-ev-sdk/sdk-algo-test/1182/result.json
INFO:root:test_task_id                            : 1182
INFO:root:callback_url                            : https://www.cvmart.net/cvmart-trains/api/ft/sdk-algo-test/callback/service/1182
INFO:root:dataset_root                            : /home/data
INFO:root:config_params                           : {"mem_ratio":0.01}
INFO:root:dynamic_code_dir                        : /dynamic-test-code
INFO:root:=============================================
INFO:root:config_params: {'mem_ratio': 0.01}
INFO:root:in /home/data have 100 images
INFO:root:check ev_sdk
INFO:root:/usr/local/ev_sdk is exist
INFO:root:Load /usr/local/ev_sdk/lib/libji.so finish
{"code":20000,"message":"执行成功","data":"success"}-- The C compiler identification is GNU 5.4.0
-- The CXX compiler identification is GNU 5.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenCV: /usr/local (found version "4.1.2") 
-- Configuring done
-- Generating done
-- Build files have been written to: /test-code/check-ev_sdk/sdk_service/test4/build
Scanning dependencies of target mytest
[ 25%] Building CXX object CMakeFiles/mytest.dir/test.cpp.o
[ 50%] Linking CXX shared library libmytest.so
[ 50%] Built target mytest
Scanning dependencies of target main
[ 75%] Building CXX object CMakeFiles/main.dir/test.cpp.o
[100%] Linking CXX executable main
[100%] Built target main
INFO:root:cdll `/test-code/check-ev_sdk/sdk_service/test4/build/libmytest.so` LoadLibrary OK.
WARNING: Logging before InitGoogleLogging() is written to STDERR
I1103 06:23:44.008608    21 SampleAlgorithm.cpp:31] [SDKLOG] Parsing configuration file: /usr/local/ev_sdk/config/algo_config.json
I1103 06:23:44.008747    21 SampleAlgorithm.cpp:39] [SDKLOG] Configs:{
    "draw_roi_area": true,
    
    "roi_type": "polygon_1",
    "polygon_1": ["POLYGON((0 0, 1 0, 1 1, 0 1))"],

    "roi_color": [255, 255, 0, 0.7],
    "roi_line_thickness": 4,
    "roi_fill": false,
    "draw_result": true,
    "draw_confidence": true,
    "thresh": 0.25,
    "language": "en",

    "target_rect_color": [0, 0, 255, 0],
    "object_rect_line_thickness": 3,
    "object_text_color": [255, 255, 255, 0],
    "object_text_bg_color": [50, 50, 50, 0],
    "object_text_size": 30,
    "mark_text_en": ["front_wear","front_no_wear","front_under_nose_wear","front_under_mouth_wear","mask_front_wear","mask_front_under_nose_wear","mask_front_under_mouth_wear","side_wear","side_no_wear","side_under_nose_wear","side_under_mouth_wear","mask_side_wear","mask_side_under_nose_wear","mask_side_under_mouth_wear","side_back_head_wear","side_back_head_no_wear","back_head","strap","front_unknown","side_unknown"],
    "mark_text_zh": ["正面佩戴口罩包住鼻子","正面未佩戴口罩","正面佩戴口罩在鼻子下且在嘴巴上面","正面佩戴口罩在嘴巴下面","口罩包住鼻子","口罩在鼻子下且在嘴巴上面","口罩在嘴巴下面","侧面佩戴口罩包住鼻子","侧面未佩戴口罩","侧面佩戴口罩在鼻子下且在嘴巴上面","侧面佩戴口罩在嘴巴下面","口罩包住鼻子","口罩在鼻子下且在嘴巴上面","口罩在嘴巴下面","侧面佩戴口罩","侧后方未佩戴口罩","背面人头","带子","正面人头","侧面人头"],
    "draw_warning_text": true,
    "warning_text_en": "WARNING! WARNING!",
    "warning_text_zh": "警告!",
    "warning_text_size": 60,
    "warning_text_color": [255, 255, 255, 0],
    "warning_text_bg_color": [0, 0, 200, 0],
    "warning_text_left_top": [0, 0]
}
I1103 06:23:44.008895    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
----------------------------------------------------------------
Input filename:   /usr/local/ev_sdk/model/exp7/weights/best.onnx
ONNX IR version:  0.0.7
Opset version:    12
Producer name:    onnx-typecast
Producer version: 
Domain:           
Model version:    0
Doc string:       
----------------------------------------------------------------
[W] [TRT] TensorRT was linked against cuDNN 8.1.0 but loaded cuDNN 8.0.5
[W] [TRT] TensorRT was linked against cuDNN 8.1.0 but loaded cuDNN 8.0.5
[W] [TRT] TensorRT was linked against cuDNN 8.1.0 but loaded cuDNN 8.0.5
I1103 06:24:36.369266    21 SampleDetector.cpp:97] [SDKLOG] input dims 1 3 640 640
I1103 06:24:36.370230    21 SampleDetector.cpp:110] [SDKLOG] output dims 3 1 16800 25
I1103 06:24:36.370373    21 ji.cpp:94] [SDKLOG] SamplePredictor init OK.
I1103 06:24:36.370385    21 test.cpp:41] ji_create_predictor() success
INFO:root:cdll `/test-code/check-ev_sdk/sdk_service/test4/build/libmytest.so` call init OK, result = 0
I1103 06:24:36.384399    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:36.384418    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:36.405230    21 SampleAlgorithm.cpp:152] [SDKLOG] detected targets : 0 valid targets :  0
I1103 06:24:36.443411    21 SampleAlgorithm.cpp:152] [SDKLOG] detected targets : 1 valid targets :  0
I1103 06:24:36.480237    21 SampleAlgorithm.cpp:152] [SDKLOG] detected targets : 0 valid targets :  0
I1103 06:24:36.511952    21 SampleAlgorithm.cpp:152] [SDKLOG] detected targets : 0 valid targets :  0
I1103 06:24:36.543828    21 SampleAlgorithm.cpp:152] [SDKLOG] detected targets : 0 valid targets :  0
I1103 06:24:36.741245    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:36.741271    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:36.922785    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:36.922822    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:37.623661    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:37.623687    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:37.700947    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:37.700973    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:37.845284    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:37.845309    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:37.922431    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:37.922461    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:38.290887    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:38.290911    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:38.367566    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:38.367591    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.161068    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.161094    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.222210    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.222234    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.288566    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.288587    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.331933    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.331954    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.440315    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.440338    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.571907    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.571928    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.627858    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.627882    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.732313    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.732336    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.768002    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.768023    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.818464    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.818485    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.864722    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.864742    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.898944    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.898963    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.943828    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.943853    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:39.994064    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:39.994089    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.042991    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.043015    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.105547    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.105573    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.167101    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.167126    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.342130    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.342156    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.395100    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.395124    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.455323    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.455348    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.525880    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.525907    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.562330    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.562355    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.606282    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.606307    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.685256    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.685281    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.788034    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.788062    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.843505    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.843529    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.942909    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.942932    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:40.995064    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:40.995086    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:41.097786    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:41.097826    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:41.247519    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:41.247543    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:41.414309    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:41.414333    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:41.732223    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:41.732249    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:41.812080    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:41.812104    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:42.146942    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:42.146967    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:42.265717    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:42.265743    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:42.302135    21 SampleAlgorithm.cpp:54] [SDKLOG] uninit
I1103 06:24:42.333395    21 test.cpp:182] destroy ji_create_predictor() success
INFO:root:call destroy_predictor() finish
INFO:root:/usr/local/ev_sdk is exist
INFO:root:Load /usr/local/ev_sdk/lib/libji.so finish
INFO:root:cdll `/test-code/check-ev_sdk/sdk_service/test4/build/libmytest.so` LoadLibrary OK.
I1103 06:24:42.334326    21 SampleAlgorithm.cpp:31] [SDKLOG] Parsing configuration file: /usr/local/ev_sdk/config/algo_config.json
I1103 06:24:42.334368    21 SampleAlgorithm.cpp:39] [SDKLOG] Configs:{
    "draw_roi_area": true,
    
    "roi_type": "polygon_1",
    "polygon_1": ["POLYGON((0 0, 1 0, 1 1, 0 1))"],

    "roi_color": [255, 255, 0, 0.7],
    "roi_line_thickness": 4,
    "roi_fill": false,
    "draw_result": true,
    "draw_confidence": true,
    "thresh": 0.25,
    "language": "en",

    "target_rect_color": [0, 0, 255, 0],
    "object_rect_line_thickness": 3,
    "object_text_color": [255, 255, 255, 0],
    "object_text_bg_color": [50, 50, 50, 0],
    "object_text_size": 30,
    "mark_text_en": ["front_wear","front_no_wear","front_under_nose_wear","front_under_mouth_wear","mask_front_wear","mask_front_under_nose_wear","mask_front_under_mouth_wear","side_wear","side_no_wear","side_under_nose_wear","side_under_mouth_wear","mask_side_wear","mask_side_under_nose_wear","mask_side_under_mouth_wear","side_back_head_wear","side_back_head_no_wear","back_head","strap","front_unknown","side_unknown"],
    "mark_text_zh": ["正面佩戴口罩包住鼻子","正面未佩戴口罩","正面佩戴口罩在鼻子下且在嘴巴上面","正面佩戴口罩在嘴巴下面","口罩包住鼻子","口罩在鼻子下且在嘴巴上面","口罩在嘴巴下面","侧面佩戴口罩包住鼻子","侧面未佩戴口罩","侧面佩戴口罩在鼻子下且在嘴巴上面","侧面佩戴口罩在嘴巴下面","口罩包住鼻子","口罩在鼻子下且在嘴巴上面","口罩在嘴巴下面","侧面佩戴口罩","侧后方未佩戴口罩","背面人头","带子","正面人头","侧面人头"],
    "draw_warning_text": true,
    "warning_text_en": "WARNING! WARNING!",
    "warning_text_zh": "警告!",
    "warning_text_size": 60,
    "warning_text_color": [255, 255, 255, 0],
    "warning_text_bg_color": [0, 0, 200, 0],
    "warning_text_left_top": [0, 0]
}
I1103 06:24:42.334486    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
[W] [TRT] TensorRT was linked against cuDNN 8.1.0 but loaded cuDNN 8.0.5
[W] [TRT] TensorRT was linked against cuDNN 8.1.0 but loaded cuDNN 8.0.5
I1103 06:24:43.420121    21 SampleDetector.cpp:97] [SDKLOG] input dims 1 3 640 640
I1103 06:24:43.420331    21 SampleDetector.cpp:110] [SDKLOG] output dims 3 1 16800 25
I1103 06:24:43.420364    21 ji.cpp:94] [SDKLOG] SamplePredictor init OK.
I1103 06:24:43.420368    21 test.cpp:41] ji_create_predictor() success
INFO:root:cdll `/test-code/check-ev_sdk/sdk_service/test4/build/libmytest.so` call init OK, result = 0
I1103 06:24:43.434206    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:43.434226    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:43.901355    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:43.901381    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:44.090322    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:44.090348    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:44.874167    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:44.874190    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:44.953332    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:44.953356    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:45.098589    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:45.098613    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:45.179338    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:45.179363    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:45.552726    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:45.552752    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:45.631701    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:45.631726    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:46.401208    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:46.401232    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:46.460688    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:46.460711    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:46.525065    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:46.525089    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:46.566956    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:46.566978    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:46.677716    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:46.677740    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:46.814047    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:46.814072    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:46.869954    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:46.869976    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:46.975062    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:46.975087    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.011384    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.011406    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.063730    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.063752    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.110703    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.110723    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.147107    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.147130    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.193560    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.193580    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.242837    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.242856    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.289669    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.289690    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.352288    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.352310    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.412269    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.412289    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.581996    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.582018    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.634116    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.634137    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.692457    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.692481    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.762014    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.762037    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.797415    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.797436    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.840816    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.840839    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:47.917246    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:47.917269    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:48.018595    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:48.018616    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:48.073009    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:48.073029    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:48.172396    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:48.172420    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:48.224555    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:48.224577    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:48.326011    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:48.326037    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:48.472874    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:48.472898    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:48.639012    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:48.639036    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:48.956732    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:48.956755    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:49.042557    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:49.042579    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:49.386402    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:49.386426    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:49.506294    21 SampleAlgorithm.cpp:99] [SDKLOG] Update ROI Info...
I1103 06:24:49.506318    21 Configuration.hpp:209] [SDKLOG] parsing roi:POLYGON((0 0, 1 0, 1 1, 0 1))
I1103 06:24:49.542672    21 SampleAlgorithm.cpp:54] [SDKLOG] uninit
I1103 06:24:49.565778    21 test.cpp:182] destroy ji_create_predictor() success
INFO:root:call destroy_predictor() finish
INFO:root:cpu_start_use_mem: 63.2109375M
INFO:root:cpu_forward_use_mem: 3138.84375M
INFO:root:cpu_end_use_1mem: 3136.90625M
INFO:root:cpu_end_use_2mem: 3136.96875M
INFO:root:gpu_start_use_mem: 0.125M
INFO:root:gpu_forward_use_mem: 976.0M
INFO:root:gpu_end_use_1mem: 696.0M
INFO:root:gpu_end_use_2mem: 696.0M
INFO:root:##################################
INFO:root:您的ev_sdk最终检测结果: 通过
INFO:root:
每一项的检测结果:
INFO:root:  ev_sdkPath_right: 成功
INFO:root:  soDependency_right: 成功
INFO:root:  inMatIsSameSize: 成功
INFO:root:  ev_sdkrun_right: 成功
INFO:root:  destroy_right: 成功
INFO:root:  memory_right: 成功
INFO:root:  cpu_start_use_mem: 63.2109375
INFO:root:  cpu_forward_use_mem: 3138.84375
INFO:root:  cpu_end_use_1mem: 3136.90625
INFO:root:  cpu_end_use_2mem: 3136.96875
INFO:root:  gpu_start_use_mem: 0.125
INFO:root:  gpu_forward_use_mem: 976.0
INFO:root:  gpu_end_use_1mem: 696.0
INFO:root:  gpu_end_use_2mem: 696.0
INFO:root:
每项检测结果表示的含义:
INFO:root:ev_sdkPath_right: 检查/usr/local/ev_sdk是否存在, 0表示不存在, 1表示存在, -1表示初始化状态还未做检查
INFO:root:soDependency_right: 检查/usr/local/ev_sdk/lib/libji.so是否正常加载, 0表示加载失败, 1表示加载成功, -1表示初始化状态还未做检查
INFO:root:inMatIsSameSize: 检查ev_sdk的输入图片和输出图片的尺寸是否相同, 0表示不相同, 1表示相同, -1表示初始化状态还未做检查
INFO:root:ev_sdkrun_right: 检查ev_sdk里的ji_calc_image函数(ev_sdk3.0是ji_calc_frame函数)能否正常运行, 0表示运行失败, 1表示运行成功, -1表示初始化状态还未做检查
INFO:root:destroy_right: 检查ev_sdk里的destroy_predictor函数能否正常运行, 0表示运行失败, 1表示运行成功, -1表示初始化状态还未做检查
INFO:root:memory_right: 检查ev_sdk在运行完之后,内存是否被释放, 0表示没有释放, 1表示释放了, -1表示初始化状态还未做检查
INFO:root:mem_info: 记录运行过程中的内存使用情况, 它里面是一个字典
INFO:root:
mem_info里包含的信息:
INFO:root:  cpu_start_use_mem: ev_sdk初始化前的cpu内存使用大小,单位是M
INFO:root:  cpu_forward_use_mem: ev_sdk在ji_calc_image运行完在执行destroy_predictor之前,cpu内存使用大小,单位是M
INFO:root:  cpu_end_use_1mem: ev_sdk在第1次执行forward+destroy_predictor之后, cpu内存使用大小,单位是M
INFO:root:  cpu_end_use_2mem: ev_sdk在第2次执行forward+destroy_predictor之后, cpu内存使用大小,单位是M
INFO:root:  gpu_start_use_mem: ev_sdk初始化前的gpu内存使用大小,单位是M
INFO:root:  gpu_forward_use_mem: ev_sdk在ji_calc_image运行完在执行destroy_predictor之前,gpu内存使用大小,单位是M
INFO:root:  gpu_end_use_1mem: ev_sdk在第1次执行forward+destroy_predictor之后, gpu内存使用大小,单位是M
INFO:root:  gpu_end_use_2mem: ev_sdk在第2次执行forward+destroy_predictor之后, gpu内存使用大小,单位是M
INFO:root:if abs(cpu_end_use_1mem - cpu_end_use_2mem) < cpu_end_use_1mem * mem_ratio 内存释放正常
INFO:root:if abs(gpu_end_use_1mem - gpu_end_use_2mem) < gpu_end_use_1mem * mem_ratio 内存释放正常
INFO:root:##################################
INFO:root:callback data: {"data": {"ev_sdkPath_right": 1, "soDependency_right": 1, "inMatIsSameSize": 1, "ev_sdkrun_right": 1, "destroy_right": 1, "memory_right": 1, "mem_info": {"cpu_start_use_mem": 63.2109375, "cpu_forward_use_mem": 3138.84375, "cpu_end_use_1mem": 3136.90625, "cpu_end_use_2mem": 3136.96875, "gpu_start_use_mem": 0.125, "gpu_forward_use_mem": 976.0, "gpu_end_use_1mem": 696.0, "gpu_end_use_2mem": 696.0}}, "id": 1182, "code": 1, "message": "success"}
INFO:root:write response_data into file `/usr/local/check-ev-sdk/sdk-algo-test/1182/result.json` ok
